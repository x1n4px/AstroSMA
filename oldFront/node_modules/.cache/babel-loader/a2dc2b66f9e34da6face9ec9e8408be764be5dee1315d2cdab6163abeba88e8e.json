{"ast":null,"code":"var _jsxFileName = \"/home/in4p/git/AstroUMA/Frontend/src/components/chart/SearchMap.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Circle, Polygon } from 'react-leaflet';\nimport L from 'leaflet';\nimport '../../assets/SearchMap.css';\nimport Radar from './Radar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchMap = ({\n  data,\n  activePopUp,\n  lat = 40.4165,\n  lon = -3.70256,\n  zoom = 11,\n  ratioFilter = 200,\n  latLonChecked\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const circleRef = useRef(null);\n  const [wedgeAngle, setWedgeAngle] = useState(0);\n  useEffect(() => {\n    if (circleRef.current && ratioFilter) {\n      const radiusMeters = parseFloat(ratioFilter) * 1000;\n      circleRef.current.setRadius(radiusMeters);\n    }\n  }, [ratioFilter]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWedgeAngle(prevAngle => (prevAngle + 1) % 360);\n    }, 50);\n    return () => clearInterval(interval);\n  }, []);\n  const getWedgePoints = () => {\n    if (!ratioFilter) return [];\n    const radiusMeters = parseFloat(ratioFilter) * 1000;\n    const angleRad = 20 * Math.PI / 180;\n    const rotationRad = wedgeAngle * Math.PI / 180;\n    const point1 = calculatePoint(lat, lon, radiusMeters, rotationRad - angleRad / 2);\n    const point2 = calculatePoint(lat, lon, radiusMeters, rotationRad + angleRad / 2);\n    return [[lat, lon], point1, point2];\n  };\n  const calculatePoint = (lat, lon, radiusMeters, angleRad) => {\n    const earthRadiusMeters = 6371 * 1000;\n    const angularDistance = radiusMeters / earthRadiusMeters;\n    const latRad = lat * Math.PI / 180;\n    const lonRad = lon * Math.PI / 180;\n    const newLatRad = Math.asin(Math.sin(latRad) * Math.cos(angularDistance) + Math.cos(latRad) * Math.sin(angularDistance) * Math.cos(angleRad));\n    const newLonRad = lonRad + Math.atan2(Math.sin(angleRad) * Math.sin(angularDistance) * Math.cos(latRad), Math.cos(angularDistance) - Math.sin(latRad) * Math.sin(newLatRad));\n    return [newLatRad * 180 / Math.PI, newLonRad * 180 / Math.PI];\n  };\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [lat, lon],\n    zoom: zoom,\n    style: {\n      width: '100%',\n      height: '800px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), data.map((punto, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [punto.lat, punto.lon],\n      icon: new L.Icon({\n        iconUrl: 'https://cdn-icons-png.flaticon.com/512/252/252025.png',\n        iconSize: [25, 25]\n      }),\n      children: activePopUp && /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: punto.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/bolide/${punto.id}`),\n            style: {\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              padding: '5px 10px',\n              borderRadius: '5px',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: \"Ver detalles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)), ratioFilter && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: latLonChecked && /*#__PURE__*/_jsxDEV(Circle, {\n        center: [lat, lon],\n        radius: parseFloat(ratioFilter) * 1000,\n        pathOptions: {\n          color: 'green',\n          fillOpacity: 0.1\n        },\n        ref: circleRef,\n        className: \"search-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchMap, \"CHdJ25VsMyyIW6n0BgwPR+RRWog=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchMap;\nexport default SearchMap;\nvar _c;\n$RefreshReg$(_c, \"SearchMap\");","map":{"version":3,"names":["useNavigate","React","useEffect","useRef","useState","MapContainer","TileLayer","Marker","Popup","Circle","Polygon","L","Radar","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchMap","data","activePopUp","lat","lon","zoom","ratioFilter","latLonChecked","_s","navigate","circleRef","wedgeAngle","setWedgeAngle","current","radiusMeters","parseFloat","setRadius","interval","setInterval","prevAngle","clearInterval","getWedgePoints","angleRad","Math","PI","rotationRad","point1","calculatePoint","point2","earthRadiusMeters","angularDistance","latRad","lonRad","newLatRad","asin","sin","cos","newLonRad","atan2","center","style","width","height","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","punto","index","position","icon","Icon","iconUrl","iconSize","title","onClick","id","backgroundColor","color","padding","borderRadius","border","cursor","radius","pathOptions","fillOpacity","ref","className","_c","$RefreshReg$"],"sources":["/home/in4p/git/AstroUMA/Frontend/src/components/chart/SearchMap.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Circle, Polygon } from 'react-leaflet';\nimport L from 'leaflet';\nimport '../../assets/SearchMap.css';\nimport Radar from './Radar';\n\nconst SearchMap = ({ data, activePopUp, lat = 40.4165, lon = -3.70256, zoom = 11, ratioFilter = 200, latLonChecked }) => {\n    const navigate = useNavigate();\n    const circleRef = useRef(null);\n    const [wedgeAngle, setWedgeAngle] = useState(0);\n\n    useEffect(() => {\n        if (circleRef.current && ratioFilter) {\n            const radiusMeters = parseFloat(ratioFilter) * 1000;\n            circleRef.current.setRadius(radiusMeters);\n        }\n    }, [ratioFilter]);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setWedgeAngle((prevAngle) => (prevAngle + 1) % 360);\n        }, 50);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    const getWedgePoints = () => {\n        if (!ratioFilter) return [];\n\n        const radiusMeters = parseFloat(ratioFilter) * 1000;\n        const angleRad = (20 * Math.PI) / 180;\n        const rotationRad = (wedgeAngle * Math.PI) / 180;\n\n        const point1 = calculatePoint(lat, lon, radiusMeters, rotationRad - angleRad / 2);\n        const point2 = calculatePoint(lat, lon, radiusMeters, rotationRad + angleRad / 2);\n\n        return [[lat, lon], point1, point2];\n    };\n\n    const calculatePoint = (lat, lon, radiusMeters, angleRad) => {\n        const earthRadiusMeters = 6371 * 1000;\n        const angularDistance = radiusMeters / earthRadiusMeters;\n\n        const latRad = lat * Math.PI / 180;\n        const lonRad = lon * Math.PI / 180;\n\n        const newLatRad = Math.asin(Math.sin(latRad) * Math.cos(angularDistance) +\n            Math.cos(latRad) * Math.sin(angularDistance) * Math.cos(angleRad));\n\n        const newLonRad = lonRad + Math.atan2(Math.sin(angleRad) * Math.sin(angularDistance) * Math.cos(latRad),\n            Math.cos(angularDistance) - Math.sin(latRad) * Math.sin(newLatRad));\n\n        return [newLatRad * 180 / Math.PI, newLonRad * 180 / Math.PI];\n    };\n\n    return (\n        <MapContainer center={[lat, lon]} zoom={zoom} style={{ width: '100%', height: '800px' }}>\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {data.map((punto, index) => (\n                <Marker\n                    key={index}\n                    position={[punto.lat, punto.lon]}\n                    icon={new L.Icon({ iconUrl: 'https://cdn-icons-png.flaticon.com/512/252/252025.png', iconSize: [25, 25] })}\n                >\n                    {activePopUp && (\n                        <Popup>\n                            <div>\n                                <p>{punto.title}</p>\n                                <button\n                                    onClick={() => navigate(`/bolide/${punto.id}`)}\n                                    style={{\n                                        backgroundColor: '#4CAF50',\n                                        color: 'white',\n                                        padding: '5px 10px',\n                                        borderRadius: '5px',\n                                        border: 'none',\n                                        cursor: 'pointer',\n                                    }}\n                                >\n                                    Ver detalles\n                                </button>\n                            </div>\n                        </Popup>\n                    )}\n                </Marker>\n            ))}\n            {ratioFilter && (\n                <>\n                {latLonChecked &&\n                    <Circle\n                        center={[lat, lon]}\n                        radius={parseFloat(ratioFilter) * 1000}\n                        pathOptions={{ color: 'green', fillOpacity: 0.1 }}\n                        ref={circleRef}\n                        className=\"search-circle\"\n                    />\n                    \n                }\n                </>\n            )}\n        </MapContainer>\n    );\n};\n\nexport default SearchMap;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,eAAe;AACvF,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,4BAA4B;AACnC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,GAAG,GAAG,OAAO;EAAEC,GAAG,GAAG,CAAC,OAAO;EAAEC,IAAI,GAAG,EAAE;EAAEC,WAAW,GAAG,GAAG;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrH,MAAMC,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAC9B,MAAM2B,SAAS,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACZ,IAAIyB,SAAS,CAACG,OAAO,IAAIP,WAAW,EAAE;MAClC,MAAMQ,YAAY,GAAGC,UAAU,CAACT,WAAW,CAAC,GAAG,IAAI;MACnDI,SAAS,CAACG,OAAO,CAACG,SAAS,CAACF,YAAY,CAAC;IAC7C;EACJ,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjBrB,SAAS,CAAC,MAAM;IACZ,MAAMgC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BN,aAAa,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAI,GAAG,CAAC;IACvD,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACf,WAAW,EAAE,OAAO,EAAE;IAE3B,MAAMQ,YAAY,GAAGC,UAAU,CAACT,WAAW,CAAC,GAAG,IAAI;IACnD,MAAMgB,QAAQ,GAAI,EAAE,GAAGC,IAAI,CAACC,EAAE,GAAI,GAAG;IACrC,MAAMC,WAAW,GAAId,UAAU,GAAGY,IAAI,CAACC,EAAE,GAAI,GAAG;IAEhD,MAAME,MAAM,GAAGC,cAAc,CAACxB,GAAG,EAAEC,GAAG,EAAEU,YAAY,EAAEW,WAAW,GAAGH,QAAQ,GAAG,CAAC,CAAC;IACjF,MAAMM,MAAM,GAAGD,cAAc,CAACxB,GAAG,EAAEC,GAAG,EAAEU,YAAY,EAAEW,WAAW,GAAGH,QAAQ,GAAG,CAAC,CAAC;IAEjF,OAAO,CAAC,CAACnB,GAAG,EAAEC,GAAG,CAAC,EAAEsB,MAAM,EAAEE,MAAM,CAAC;EACvC,CAAC;EAED,MAAMD,cAAc,GAAGA,CAACxB,GAAG,EAAEC,GAAG,EAAEU,YAAY,EAAEQ,QAAQ,KAAK;IACzD,MAAMO,iBAAiB,GAAG,IAAI,GAAG,IAAI;IACrC,MAAMC,eAAe,GAAGhB,YAAY,GAAGe,iBAAiB;IAExD,MAAME,MAAM,GAAG5B,GAAG,GAAGoB,IAAI,CAACC,EAAE,GAAG,GAAG;IAClC,MAAMQ,MAAM,GAAG5B,GAAG,GAAGmB,IAAI,CAACC,EAAE,GAAG,GAAG;IAElC,MAAMS,SAAS,GAAGV,IAAI,CAACW,IAAI,CAACX,IAAI,CAACY,GAAG,CAACJ,MAAM,CAAC,GAAGR,IAAI,CAACa,GAAG,CAACN,eAAe,CAAC,GACpEP,IAAI,CAACa,GAAG,CAACL,MAAM,CAAC,GAAGR,IAAI,CAACY,GAAG,CAACL,eAAe,CAAC,GAAGP,IAAI,CAACa,GAAG,CAACd,QAAQ,CAAC,CAAC;IAEtE,MAAMe,SAAS,GAAGL,MAAM,GAAGT,IAAI,CAACe,KAAK,CAACf,IAAI,CAACY,GAAG,CAACb,QAAQ,CAAC,GAAGC,IAAI,CAACY,GAAG,CAACL,eAAe,CAAC,GAAGP,IAAI,CAACa,GAAG,CAACL,MAAM,CAAC,EACnGR,IAAI,CAACa,GAAG,CAACN,eAAe,CAAC,GAAGP,IAAI,CAACY,GAAG,CAACJ,MAAM,CAAC,GAAGR,IAAI,CAACY,GAAG,CAACF,SAAS,CAAC,CAAC;IAEvE,OAAO,CAACA,SAAS,GAAG,GAAG,GAAGV,IAAI,CAACC,EAAE,EAAEa,SAAS,GAAG,GAAG,GAAGd,IAAI,CAACC,EAAE,CAAC;EACjE,CAAC;EAED,oBACI3B,OAAA,CAACT,YAAY;IAACmD,MAAM,EAAE,CAACpC,GAAG,EAAEC,GAAG,CAAE;IAACC,IAAI,EAAEA,IAAK;IAACmC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACpF9C,OAAA,CAACR,SAAS;MACNuD,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxG,CAAC,EACDhD,IAAI,CAACiD,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACnBvD,OAAA,CAACP,MAAM;MAEH+D,QAAQ,EAAE,CAACF,KAAK,CAAChD,GAAG,EAAEgD,KAAK,CAAC/C,GAAG,CAAE;MACjCkD,IAAI,EAAE,IAAI5D,CAAC,CAAC6D,IAAI,CAAC;QAAEC,OAAO,EAAE,uDAAuD;QAAEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;MAAE,CAAC,CAAE;MAAAd,QAAA,EAE1GzC,WAAW,iBACRL,OAAA,CAACN,KAAK;QAAAoD,QAAA,eACF9C,OAAA;UAAA8C,QAAA,gBACI9C,OAAA;YAAA8C,QAAA,EAAIQ,KAAK,CAACO;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBpD,OAAA;YACI8D,OAAO,EAAEA,CAAA,KAAMlD,QAAQ,CAAC,WAAW0C,KAAK,CAACS,EAAE,EAAE,CAAE;YAC/CpB,KAAK,EAAE;cACHqB,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE,OAAO;cACdC,OAAO,EAAE,UAAU;cACnBC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,MAAM;cACdC,MAAM,EAAE;YACZ,CAAE;YAAAvB,QAAA,EACL;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACV,GAvBIG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBN,CACX,CAAC,EACD3C,WAAW,iBACRT,OAAA,CAAAE,SAAA;MAAA4C,QAAA,EACCpC,aAAa,iBACVV,OAAA,CAACL,MAAM;QACH+C,MAAM,EAAE,CAACpC,GAAG,EAAEC,GAAG,CAAE;QACnB+D,MAAM,EAAEpD,UAAU,CAACT,WAAW,CAAC,GAAG,IAAK;QACvC8D,WAAW,EAAE;UAAEN,KAAK,EAAE,OAAO;UAAEO,WAAW,EAAE;QAAI,CAAE;QAClDC,GAAG,EAAE5D,SAAU;QACf6D,SAAS,EAAC;MAAe;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC,gBAGJ,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEvB,CAAC;AAACzC,EAAA,CAnGIR,SAAS;EAAA,QACMjB,WAAW;AAAA;AAAAyF,EAAA,GAD1BxE,SAAS;AAqGf,eAAeA,SAAS;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}