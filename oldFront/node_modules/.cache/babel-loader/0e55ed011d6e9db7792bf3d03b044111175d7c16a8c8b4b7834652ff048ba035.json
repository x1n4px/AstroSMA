{"ast":null,"code":"var _jsxFileName = \"/home/in4p/git/AstroUMA/Frontend/src/pages/InformeZ.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LinkMap from '../components/chart/LinkMap';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport PendienteChart from '../components/chart/Pending';\nimport axios from 'axios';\nimport { getStations } from '../services/stationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformeZ = () => {\n  _s();\n  // Datos de ejemplo del informe Z\n  const informeData = {\n    idInforme: 123,\n    observatorioNumero1: 1,\n    observatorioNumero2: 2,\n    fecha: '2023-10-27',\n    hora: '10:15:00',\n    errorCuadratico1: '0.001',\n    errorCuadratico2: '0.002',\n    fotogramasUsados: 100,\n    ajusteEstacion2Inicio: '10:10:00',\n    ajusteEstacion2Final: '10:20:00',\n    anguloDiedro: 120.5,\n    pesoEstadistico: 0.95,\n    erroresARRadiante: '0.01',\n    coordenadasRadianteEcliptica: '10, 20',\n    coordenadasRadiante1200: '15, 25',\n    azimut: 180,\n    distanciaCenital: 30,\n    inicioTrayectoriaEstacion1: '10:05:00',\n    finTrayectoriaEstacion1: '10:10:00',\n    inicioTrayectoriaEstacion2: '10:10:00',\n    finTrayectoriaEstacion2: '10:20:00',\n    impactoPrevisible: 'Sí',\n    distanciaRecorridaEstacion1: 1000,\n    errorDistanciaEstacion1: 10,\n    errorAlturasEstacion1: 5,\n    distanciaRecorridaEstacion2: 1200,\n    errorDistanciaEstacion2: 12,\n    errorAlturasEstacion2: 6,\n    tiempoEstacion1: 300,\n    velocidadMedia: 100,\n    tiempoTrayectoriaEstacion2: 600\n  };\n\n  // Datos de ejemplo para el mapa\n  const data = [{\n    id: 1,\n    lat: 40.6168,\n    lon: -2.038,\n    title: 'Estación 1',\n    date: '2023-10-27',\n    video: '',\n    height: 83,\n    station_id: 4\n  }, {\n    id: 2,\n    lat: 41.3851,\n    lon: 2.1734,\n    title: 'Estación 2',\n    date: '2023-10-27',\n    video: '',\n    height: 30,\n    station_id: 7\n  }];\n  const [stations, setStations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStations = async () => {\n      try {\n        const allStations = await getStations();\n        const validStationIds = data.map(item => item.station_id);\n        // Filtrar solo las estaciones cuyo id esté en la lista de station_id\n        const filteredStations = allStations.filter(station => validStationIds.includes(station.id));\n        setStations(filteredStations);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        className: \"mb-4 mb-md-0\",\n        children: [/*#__PURE__*/_jsxDEV(LinkMap, {\n          data: data,\n          stations: stations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PendienteChart, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-primary\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Campo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(informeData).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(InformeZ, \"RNivkdHPhEk2VKItfkApFg7SCBI=\");\n_c = InformeZ;\nexport default InformeZ;\nvar _c;\n$RefreshReg$(_c, \"InformeZ\");","map":{"version":3,"names":["React","useState","useEffect","LinkMap","Container","Row","Col","Table","PendienteChart","axios","getStations","jsxDEV","_jsxDEV","InformeZ","_s","informeData","idInforme","observatorioNumero1","observatorioNumero2","fecha","hora","errorCuadratico1","errorCuadratico2","fotogramasUsados","ajusteEstacion2Inicio","ajusteEstacion2Final","anguloDiedro","pesoEstadistico","erroresARRadiante","coordenadasRadianteEcliptica","coordenadasRadiante1200","azimut","distanciaCenital","inicioTrayectoriaEstacion1","finTrayectoriaEstacion1","inicioTrayectoriaEstacion2","finTrayectoriaEstacion2","impactoPrevisible","distanciaRecorridaEstacion1","errorDistanciaEstacion1","errorAlturasEstacion1","distanciaRecorridaEstacion2","errorDistanciaEstacion2","errorAlturasEstacion2","tiempoEstacion1","velocidadMedia","tiempoTrayectoriaEstacion2","data","id","lat","lon","title","date","video","height","station_id","stations","setStations","loading","setLoading","error","setError","fetchStations","allStations","validStationIds","map","item","filteredStations","filter","station","includes","err","className","children","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","Object","entries","key","value","_c","$RefreshReg$"],"sources":["/home/in4p/git/AstroUMA/Frontend/src/pages/InformeZ.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LinkMap from '../components/chart/LinkMap';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport PendienteChart from '../components/chart/Pending';\nimport axios from 'axios';\nimport { getStations } from '../services/stationService'\n\n\nconst InformeZ = () => {\n    // Datos de ejemplo del informe Z\n    const informeData = {\n        idInforme: 123,\n        observatorioNumero1: 1,\n        observatorioNumero2: 2,\n        fecha: '2023-10-27',\n        hora: '10:15:00',\n        errorCuadratico1: '0.001',\n        errorCuadratico2: '0.002',\n        fotogramasUsados: 100,\n        ajusteEstacion2Inicio: '10:10:00',\n        ajusteEstacion2Final: '10:20:00',\n        anguloDiedro: 120.5,\n        pesoEstadistico: 0.95,\n        erroresARRadiante: '0.01',\n        coordenadasRadianteEcliptica: '10, 20',\n        coordenadasRadiante1200: '15, 25',\n        azimut: 180,\n        distanciaCenital: 30,\n        inicioTrayectoriaEstacion1: '10:05:00',\n        finTrayectoriaEstacion1: '10:10:00',\n        inicioTrayectoriaEstacion2: '10:10:00',\n        finTrayectoriaEstacion2: '10:20:00',\n        impactoPrevisible: 'Sí',\n        distanciaRecorridaEstacion1: 1000,\n        errorDistanciaEstacion1: 10,\n        errorAlturasEstacion1: 5,\n        distanciaRecorridaEstacion2: 1200,\n        errorDistanciaEstacion2: 12,\n        errorAlturasEstacion2: 6,\n        tiempoEstacion1: 300,\n        velocidadMedia: 100,\n        tiempoTrayectoriaEstacion2: 600\n\n    };\n\n    // Datos de ejemplo para el mapa\n    const data = [\n        {\n            id: 1,\n            lat: 40.6168,\n            lon: -2.038,\n            title: 'Estación 1',\n            date: '2023-10-27',\n            video: '',\n            height: 83,\n            station_id: 4\n        },\n        {\n            id: 2,\n            lat: 41.3851,\n            lon: 2.1734,\n            title: 'Estación 2',\n            date: '2023-10-27',\n            video: '',\n            height: 30,\n            station_id: 7\n        },\n    ];\n\n\n     \n    const [stations, setStations] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n   \n\n\n    useEffect(() => {\n        const fetchStations = async () => {\n            try {\n                const allStations = await getStations();\n                const validStationIds = data.map(item => item.station_id);\n                // Filtrar solo las estaciones cuyo id esté en la lista de station_id\n                const filteredStations = allStations.filter(station =>\n                    validStationIds.includes(station.id)\n                );\n                setStations(filteredStations);\n            } catch (err) {\n                setError(err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchStations();\n    }, []);\n\n    return (\n        <Container className=\"mt-4\">\n            <Row>\n                <Col xs={12} md={6} className=\"mb-4 mb-md-0\">\n                    <LinkMap data={data} stations={stations} />\n                    <PendienteChart data={data} />\n                </Col>\n                <Col xs={12} md={6}>\n                    <Table striped bordered hover responsive>\n                        <thead >\n                            <tr className=\"bg-primary\">\n                                <th>Campo</th>\n                                <th>Valor</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.entries(informeData).map(([key, value]) => (\n                                <tr key={key}>\n                                    <td>{key}</td>\n                                    <td>{value}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InformeZ;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}